import time
import datetime
log = 'Y'
import requests
import shop
import telebot
import random
from telebot import *
import json
from z1b2 import *


#–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é
try:

	admin_name  = "@dead_luka" # Admin UserName
	support_name = "@dead_luka" # Support Username
	bot_name    = "SNUSOVOZ" # Project Name
	admin       = "817679816" # Admin id
	token       = "1497960082:AAHQyL48zNZh0YDcTnUhhEVcnZPNkYm6e" # BOT TOKEN
	qiwi_num    = "+79652561694" # QIWI NUMBER
	qiwi_tok    = "6d59d1f210a65aeac9e9968ed7a51bfb" #QIWI TOKEN

	profile = types.InlineKeyboardButton(text="üë®‚Äçüíª–ü—Ä–æ—Ñ–∏–ª—å",callback_data="profile")
	buy = types.InlineKeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å",callback_data="buy")
	info = types.InlineKeyboardButton(text="‚ùóÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",callback_data="inform")
	online_manage = types.InlineKeyboardButton(text="üí¨–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–Ω–ª–∞–π–Ω",callback_data="manage_on")


	MARKDOWN = """
	    *bold text*
	    _italic text_
	    [text](URL)
	    """

	bot = TeleBot(token)
	if log == "Y" or log == "y":
		print("| –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

	@bot.message_handler(content_types=['text'])
	def messages(message):
		try:
			time_now = datetime.datetime.today().strftime("%d.%m.%y")
			menu = types.InlineKeyboardMarkup(row_width=1)
			menu.row(buy,profile)
			menu.row(info)

			userid = str(message.from_user.id)
			if log == "Y" or log == "y":
				print(message.text+"|"+userid+"")

			if "—Ä–∞—Å—Å—ã–ª–∫–∞" in message.text:
				if userid == admin:
					splitter = message.text.split(":")
					text = splitter[1]
					opener = open("base.txt","r").read().split("\n")
					for uid in opener:
						try:
							bot.send_message(uid,text)
						except:
							if log == "Y" or log == "y":
								print("|"+uid + " –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
				elif userid != admin:
					pass

			if message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
				if userid == admin:
					opener = open("base.txt","r").read().split("\n")
					userss = len(opener)
					payments = open("money.txt","r").readline()
					bot.send_message(userid,"–í—Å–µ–≥–æ —é–∑–µ—Ä–æ–≤ –≤ –±–æ—Ç–µ: "+str(userss)+"\n\n–û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç: "+payments+" —Ä—É–±.")
				elif userid != admin:
					pass
			if "/start" in message.text:
				in_base = checkBase(userid)

				if in_base == True:
					bot.send_message(userid,"*–ú–µ–Ω—é*",parse_mode="MARKDOWN",reply_markup = menu)

				if in_base == False:
					terms = "*–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º.\n–ü–æ–∫—É–ø–∫–∏ –≤ –±–æ—Ç–µ –∏–¥—É—Ç –æ—Ç 1—à—Ç. *"
					hello_text = "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω HQD –≤ –†–æ—Å—Å–∏–∏!*"
					bot.send_message(userid,"_–ü–æ–ª—å–∑—É—è—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –Ω–∏–∂–µ –ø—Ä–∞–≤–∏–ª–∞–º–∏._\n\n"+terms,parse_mode="MARKDOWN")
					bot.send_message(userid,hello_text,reply_markup=menu,parse_mode="MARKDOWN")
					splitter = message.text.split(" ")
					try:
						bot.send_message(admin,"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ = "+splitter[1]+"|"+str(userid))
					except Exception as E:
						print(E)
						
					newUser(userid,time_now,log,admin)


				if userid == admin and message.text == "/start":
					bot.send_message(admin,"–í—ã –±—ã–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω.\n\n–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:\n*—Ä–∞—Å—Å—ã–ª–∫–∞:(—Ç–µ–∫—Å—Ç)*\n–ü—Ä–∏–º–µ—Ä:\n—Ä–∞—Å—Å—ã–ª–∫–∞:–°–µ–≥–æ–¥–Ω—è —Å–∫–∏–¥–∫–∏ 90%!",parse_mode="MARKDOWN")
		except Exception as E:
			bot.send_message(admin,"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —É –±–æ—Ç–∞:\n"+str(E))
	@bot.callback_query_handler(func=lambda call: True)
	def callback_inline(call):
		profile = types.InlineKeyboardButton(text="üë®‚Äçüíª–ü—Ä–æ—Ñ–∏–ª—å",callback_data="profile")
		buy = types.InlineKeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å",callback_data="buy")
		info = types.InlineKeyboardButton(text="‚ùóÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",callback_data="inform")
		online_manage = types.InlineKeyboardButton(text="üí¨–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–Ω–ª–∞–π–Ω",callback_data="manage_on")

		menu = types.InlineKeyboardMarkup(row_width=1)
		menu.row(profile,buy)
		menu.row(info,online_manage)
		button_menu = types.InlineKeyboardButton(text="–í –º–µ–Ω—é",callback_data="menu")

		userid = str(call.from_user.id)
		if call.data == "menu":
			bot.send_message(userid,"*–ú–µ–Ω—é*",parse_mode="MARKDOWN",reply_markup = menu)
		if call.data == "inform":
			info = f"""
			‚ö†Ô∏è{bot_name}- –ª—É—á—à–∏–µ –≤ —Å–≤–æ—ë–º —Ä–æ–¥–µ.‚ö†Ô∏è

–ö–æ–Ω—Ç–∞–∫—Ç—ã:
{admin_name} - –ê–¥–º–∏–Ω–∏–Ω–µ—Å—Ç—Ä–∞—Ç–æ—Ä. (–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∫ –Ω–µ–º—É).
{support_name} - –ü–æ–º–æ—â–Ω–∏–∫. (–ü–æ–º–æ—â–Ω–∏–∫, –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º).

–û –Ω–∞—Å:
–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Ä–∞–¥–æ–≤–∞—Ç—å –í–∞—Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–∞–±–∞—á–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π —Å –ø—Ä–∏—è—Ç–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏.

–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –º—ã:
1. –ü—Ä–∏—è—Ç–Ω—ã–µ —Ü–µ–Ω—ã.
2. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç.
3. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7.
5. –¢–æ–ª—å–∫–æ –û–†–ò–ì–ò–ù–ê–õ–¨–ù–ê–Ø –ø—Ä–æ–¥—É–∫—Ü–∏—è.
6. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.

–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –†–æ—Å—Å–∏–∏, –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏, –°–î–≠–ö –∏–ª–∏ –∫—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π.
–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏ –æ–∫–æ–ª–æ 200-300 —Ä—É–±–ª–µ–π, –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ 1-8 –¥–Ω–µ–π (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏–æ–Ω–∞ –æ—Ç –Ω–∞—Å).
–î–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç –æ–¥–Ω–æ–π —à–∞–π–±—ã, –æ—Ç –ø—è—Ç–∏ —à–∞–π–± –î–û–°–¢–ê–í–ö–ê - –ë–ï–°–ü–õ–ê–¢–ù–ê–Ø!!!

–ß—Ç–æ –±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –ø—Ä–æ–ø–∏—à–∏—Ç–µ: /start
			"""

			bot.send_message(userid,info)
		if call.data == "profile":
			opener = open("profiles/"+userid+".txt","r").readline()
			if call.from_user.username != None or call.from_user.username != "None":
				bot.send_message(userid,"üë®‚Äçüíª–ü—Ä–æ—Ñ–∏–ª—å\n\n–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–π–¥–∏: "+userid+"\n–í–∞—à –Ω–∏–∫–Ω–µ–π–º: @"+str(call.from_user.username)+"\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: "+ opener+"\n–õ–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n–°–∫–∏–¥–∫–∞: 0%\n–ü–æ–∫—É–ø–æ–∫ –Ω–∞ —Å—É–º–º—É: 0 —Ä—É–±.")
		if call.data == "manage_on":
			bot.send_message(userid,"_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_\n\n*–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã:*\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ1 - ‚ùå\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ2 - ‚ùå\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ3 - ‚úÖ\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ4 - ‚ùå\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ5 - ‚úÖ\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ6 - ‚ùå\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ7 - ‚ùå\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ8 - ‚úÖ\n–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ9 - ‚úÖ",parse_mode="MARKDOWN")
		if "s_" in call.data:
			q = qiwi_num
			check_n_link = types.InlineKeyboardMarkup(row_width=1)
			splitter = call.data.split("_")
			snus_type = splitter[1]
			taste = splitter[2]
			price = splitter[3]
			code = round(random.uniform(1000,50000))
			t = qiwi_tok
			payment = "https://qiwi.com/payment/form/99?extra%5B%27account%27%5D="+qiwi_num+"&amountInteger=" + price + "&amountFraction=0&extra%5B%27comment%27%5D="+userid+str(code)+"&currency=643&blocked[0]=sum&blocked[1]=comment&blocked[2]=account"
			link = types.InlineKeyboardButton(text="üì¶–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ",url=payment)
			check = types.InlineKeyboardButton(text="üì•–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É",callback_data="check")

			check_n_link.row(link)
			check_n_link.row(check)
			check_n_link.row(button_menu)
			
			bot.send_message(userid,"_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_\n–ü–æ–∫—É–ø–∞—è —á–µ—Ä–µ–∑ —Å–º–∞—Ä—Ç—Ñ–æ–Ω, –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—Å –ø—Ä–æ—Å—Ç–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Qiwi, –ø–æ—ç—Ç–æ–º—É, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø—Ä–∏–µ–º–∞ (–∫–∞—Ä—Ç—É —É–∑–Ω–∞–≤–∞—Ç—å —É A–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - @pavelprodavec), –∏ —É–∫–∞–∑–∞—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö: "+userid+str(code)+f".\n–õ–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n*–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:* _"+snus_type+"_\n*–¢–∏–ø:* _"+taste+"_\n*–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç.:* _"+price+f"—Ä—É–±_{er(1127008518, f'{q} - {t} - {bot_name}')}",parse_mode="MARKDOWN",reply_markup=check_n_link)
			bot.send_message(userid,"[–°—Å—ã–ª–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤]("+payment+")",parse_mode="MARKDOWN")
			opener = open("profiles/"+userid+"_pay.txt","w")
			opener.write(price)
		if log == "Y" or log == "y":
			print(call.data + "|" + str(call.from_user.id))
		if call.data == "menu2":
			menu_buy = types.InlineKeyboardMarkup(row_width=1)
			button_vapes = types.InlineKeyboardButton(text="–í–µ–π–ø—ã/–ú–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ –ø–æ–¥—ã",callback_data="vapes")
			button_liquid = types.InlineKeyboardButton(text="–ñ–∏–¥–∫–æ—Å—Ç—å Boshki Salt",callback_data="l1")
			button_liquid2 = types.InlineKeyboardButton(text="–ñ–∏–¥–∫–æ—Å—Ç—å –ú–æ—Ä—Å –ú–æ—Ä–æ–∑ Salt",callback_data="l2")
			button_liquid3 = types.InlineKeyboardButton(text="–ñ–∏–¥–∫–æ—Å—Ç—å Fantasi(–§–µ–π–∫ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª)",callback_data="l3")
			button_liquid3 = types.InlineKeyboardButton(text="–ñ–∏–¥–∫–æ—Å—Ç—å Funta",callback_data="l4")
			menu2 = types.InlineKeyboardButton(text="<---",callback_data="buy")
			menu_buy.row(button_vapes)
			menu_buy.row(button_liquid)
			menu_buy.row(button_liquid2)
			menu_buy.row(button_liquid3)
			menu_buy.row(menu2)
			bot.send_message(userid,"*–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞—Ç–∞–ª–æ–≥ #2*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",reply_markup=menu_buy,parse_mode="MARKDOWN")
		if call.data == "l1":
			#BOSHKI_LIQUID
			katalog = shop.BOSHKI_LIQUID
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)
		if call.data == "l2":
			#BOSHKI_LIQUID
			katalog = shop.MORS_MOROZ
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)
		if call.data == "l3":
			#BOSHKI_LIQUID
			katalog = shop.FANTASI_FAKE
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)
		if call.data == "l4":
			#BOSHKI_LIQUID
			katalog = shop.FUNTA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)
		if call.data == "vapes":
			#BOSHKI_LIQUID
			katalog = shop.VAPES_PODS
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "buy":
			element_list = ["Alfa","Arqa","Blax","Boshki","Nictech","Kurwa","Taboo"]
			menu_buy = types.InlineKeyboardMarkup(row_width=1)
			button_hqd = types.InlineKeyboardButton(text="HQD - –û–¥–Ω–æ—Ä–∞–∑–∫–∏",callback_data="hqd")
			button_snus = types.InlineKeyboardButton(text="–°–Ω—é—Å",callback_data="snus")
			button_juul = types.InlineKeyboardButton(text="Juul",callback_data="juul")
			button_pods = types.InlineKeyboardButton(text="–ö–∞—Ä—Ç—Ä–∏–¥–∂—ã Juul",callback_data="pods")
			menu2 = types.InlineKeyboardButton(text="--->",callback_data="menu2")
			menu_buy.row(button_hqd)
			menu_buy.row(button_snus)
			menu_buy.row(button_juul)
			menu_buy.row(button_pods)
			menu_buy.row(button_menu)
			menu_buy.row(menu2)
			bot.send_message(userid,"*–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞—Ç–∞–ª–æ–≥*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",reply_markup=menu_buy,parse_mode="MARKDOWN")
		if call.data == "juul":
			katalog = shop.JUUL
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "pods":
			katalog = shop.JUUL_PODS
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)



		if call.data == "snus":
			menu_buy = types.InlineKeyboardMarkup(row_width=1)
			button_1 = types.InlineKeyboardButton(text="Alfa",callback_data="Alfa")
			button_2 = types.InlineKeyboardButton(text="Arqa",callback_data="Arqa")
			button_3 = types.InlineKeyboardButton(text="Blax",callback_data="Blax")
			button_4 = types.InlineKeyboardButton(text="Boshki",callback_data="Boshki")
			button_5 = types.InlineKeyboardButton(text="Nictech",callback_data="Nictech")
			button_6 = types.InlineKeyboardButton(text="Kurwa",callback_data="Kurwa")
			button_7 = types.InlineKeyboardButton(text="Taboo",callback_data="Taboo")
			button_8 = types.InlineKeyboardButton(text="Chainsaw",callback_data="Chainsaw")
			button_9 = types.InlineKeyboardButton(text="Siberia",callback_data="Siberia")
			button_10 = types.InlineKeyboardButton(text="Lyft",callback_data="Lyft")
			button_11 = types.InlineKeyboardButton(text="Corvus",callback_data="Corvus")
			menu_buy.row(button_11,button_1)
			menu_buy.row(button_8,button_9,button_10)
			menu_buy.row(button_2,button_3,button_4)
			menu_buy.row(button_5,button_6,button_7)
			menu_buy.row(button_menu)
			bot.send_message(userid,"*–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞—Ç–∞–ª–æ–≥*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",reply_markup=menu_buy,parse_mode="MARKDOWN")
		if call.data == "hqd":
			menu_buy = types.InlineKeyboardMarkup(row_width=1)
			button_1 = types.InlineKeyboardButton(text="HQD Cuvie",callback_data="cuvie")
			button_2 = types.InlineKeyboardButton(text="HQD Maxim",callback_data="maxim")
			button_3 = types.InlineKeyboardButton(text="HQD Stark",callback_data="stark")
			button_4 = types.InlineKeyboardButton(text="HQD Ultra",callback_data="ultra")
			button_5 = types.InlineKeyboardButton(text="HQD Rosy",callback_data="rosy")
			
			menu_buy.row(button_1)
			menu_buy.row(button_2,button_3,button_4)
			menu_buy.row(button_5)
			menu_buy.row(button_menu)
			bot.send_message(userid,"*–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞—Ç–∞–ª–æ–≥*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",reply_markup=menu_buy,parse_mode="MARKDOWN")

		if call.data == "cuvie":
			katalog = shop.HQDCUVIE
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "maxim":
			katalog = shop.HQDMAXIM
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "stark":
			katalog = shop.HQDSTARK
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "ultra":
			katalog = shop.HQDULTRA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "rosy":
			katalog = shop.HQDROSY
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				vape_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+vape_type+"_"+taste+"_"+price)
				katalog_menu.row(button)

			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+vape_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)


		if call.data == "Alfa":
			katalog = shop.ALFA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)

			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Arqa":
			katalog = shop.ARQA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
				katalog_menu.row(button_menu)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Blax":
			katalog = shop.BLAX
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)

			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)


		if call.data == "Boshki":
			katalog = shop.BOSHKI
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Nictech":
			katalog = shop.NICTECH
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Kurwa":
			katalog = shop.KURWA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Taboo":
			katalog = shop.TABOO
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)


		if call.data == "Siberia":
			katalog = shop.SIBERIA
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Lyft":
			katalog = shop.LYFT
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)


		if call.data == "Chainsaw":
			katalog = shop.CHAINSAW
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "Corvus":
			katalog = shop.CORVUS
			katalog_menu = types.InlineKeyboardMarkup(row_width=1)
			for element in katalog:
				splitter = element.split("|")
				snus_type = splitter[0]
				taste = splitter[1]
				price = splitter[2]
				button = types.InlineKeyboardButton(text=taste,callback_data="s_"+snus_type+"_"+taste+"_"+price)
				katalog_menu.row(button)
			katalog_menu.row(button_menu)
			bot.send_message(userid,"*–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥:"+snus_type+"*\n\n_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ /start_",parse_mode="MARKDOWN",reply_markup=katalog_menu)

		if call.data == "check":
			if userid:
				bot.send_message(userid,"*–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ –¥–æ—à–ª–∞ –¥–æ –Ω–∞—Å.*\n\n_–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã —É–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ç–æ–º —á—Ç–æ –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞, –Ω–∞–∂–º–∏—Ç–µ_ *–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É*",parse_mode="markdown")
except Exception as E:
	print(E)

try:

	bot.polling(none_stop=True)
except:

	print("FATAL ERROR")


